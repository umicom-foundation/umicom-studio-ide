<?xml version="1.0" encoding="UTF-8"?>
<!--
================================================================================
  Umicom Studio IDE
  File: src/ui/resources/ustudio.gresource.xml
  PURPOSE: GTK GResource manifest for bundling UI (.ui/.xml), CSS, and presets
  Created by: Umicom Foundation | Author: Sammy Hegab | Date: 2025-10-11 | MIT
================================================================================

  HOW THIS FILE IS USED
================================================================================
  1. This XML manifest lists all files to be embedded into the application binary
  • CMake calls `glib-compile-resources` on this manifest to generate a C source
    (ustudio_gresource.c) that embeds the listed files into the binary.
  • At runtime, GTK loads UI via resource paths like:
        /com/umicom/ustudio/ui/main.ui
    matching the <gresource prefix> + the <file> path below.

  DIRECTORY LAYOUT (must stay in sync)
================================================================================
  The following directory structure is assumed relative to this manifest file:
  src/ui/resources/
    styles/
      app.css
      theme_presets.json
    ui/
      main.ui
      chat.ui
      shortcuts.ui
      partials/
        chat_pane_snippet.xml
        log_pane_snippet.xml

  NOTES
  =============================================================================
  • Keep this manifest synchronized with actual files in src/ui/resources/.
  • `preprocess="xml-stripblanks"` safely removes insignificant whitespace in
    XML-based files (.ui/.xml), reducing size without changing semantics.
  • Do NOT change the prefix unless you also update all code that references
    resource paths (e.g., gtk_builder_new_from_resource()).
==============================================================================
-->

<gresources>
  <!-- All embedded resources live under this resource namespace (URI prefix). -->
  <gresource prefix="/com/umicom/ustudio">

    <!-- Stylesheets and theme presets (no XML preprocessing needed) -->
    <file>styles/app.css</file>
    <file>styles/theme_presets.json</file>

    <!-- Top-level UI definition files (strip XML blanks to keep size lean) -->
    <file preprocess="xml-stripblanks">ui/main.ui</file>
    <file preprocess="xml-stripblanks">ui/chat.ui</file>
    <file preprocess="xml-stripblanks">ui/shortcuts.ui</file>

    <!-- UI partial snippets included by the main UI files -->
    <file preprocess="xml-stripblanks">ui/partials/chat_pane_snippet.xml</file>
    <file preprocess="xml-stripblanks">ui/partials/log_pane_snippet.xml</file>

  </gresource>
</gresources>
